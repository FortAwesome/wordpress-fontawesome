{"version":3,"sources":["webpack:///./node_modules/@fortawesome/fa-icon-chooser/dist/esm/fa-icon.entry.js"],"names":["faIconCss","FaIcon","constructor","hostRef","registerInstance","pro","loading","componentWillLoad","iconUpload","iconDefinition","prefix","iconName","name","icon","parseInt","width","height","unicode","toString","path","svgApi","console","error","CONSOLE_MESSAGE_PREFIX","stylePrefix","findIconDefinition","svgFetchBaseUrl","kitToken","iconUrl","PREFIX_TO_STYLE","library","lodash","get","getUrlText","then","svg","parseSvgText","add","Object","assign","catch","e","finally","buildSvg","extraClasses","svgPathData","classes","class","push","size","allClasses","join","Array","isArray","h","xmlns","viewBox","fill","d","render","Host","style"],"mappings":"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","file":"12.js","sourcesContent":["import { r as registerInstance, h, f as Host } from './index-4ad4b058.js';\nimport { C as CONSOLE_MESSAGE_PREFIX, P as PREFIX_TO_STYLE, l as lodash, p as parseSvgText } from './utils-dd78e4a8.js';\n\nconst faIconCss = \"\";\n\nconst FaIcon = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.pro = false;\n    this.loading = false;\n  }\n  componentWillLoad() {\n    if (this.iconUpload) {\n      this.iconDefinition = {\n        prefix: 'fak',\n        iconName: this.iconUpload.name,\n        icon: [parseInt(`${this.iconUpload.width}`), parseInt(`${this.iconUpload.height}`), [], this.iconUpload.unicode.toString(16), this.iconUpload.path],\n      };\n      return;\n    }\n    if (this.icon) {\n      this.iconDefinition = this.icon;\n      return;\n    }\n    if (!this.svgApi) {\n      console.error(`${CONSOLE_MESSAGE_PREFIX}: fa-icon: svgApi prop is needed but is missing`, this);\n      return;\n    }\n    if (!(this.stylePrefix && this.name)) {\n      console.error(`${CONSOLE_MESSAGE_PREFIX}: fa-icon: the 'stylePrefix' and 'name' props are needed to render this icon but not provided.`, this);\n      return;\n    }\n    const { findIconDefinition } = this.svgApi;\n    const iconDefinition = findIconDefinition &&\n      findIconDefinition({\n        prefix: this.stylePrefix,\n        iconName: this.name,\n      });\n    if (iconDefinition) {\n      this.iconDefinition = iconDefinition;\n      return;\n    }\n    if (!this.pro) {\n      console.error(`${CONSOLE_MESSAGE_PREFIX}: fa-icon: 'pro' prop is false but no free icon is avaialble`, this);\n      return;\n    }\n    if (!this.svgFetchBaseUrl) {\n      console.error(`${CONSOLE_MESSAGE_PREFIX}: fa-icon: 'svgFetchBaseUrl' prop is absent but is necessary for fetching icon`, this);\n      return;\n    }\n    if (!this.kitToken) {\n      console.error(`${CONSOLE_MESSAGE_PREFIX}: fa-icon: 'kitToken' prop is absent but is necessary for accessing icon`, this);\n      return;\n    }\n    this.loading = true;\n    const iconUrl = `${this.svgFetchBaseUrl}/${PREFIX_TO_STYLE[this.stylePrefix]}/${this.name}.svg?token=${this.kitToken}`;\n    const library = lodash.get(this, 'svgApi.library');\n    if ('function' !== typeof this.getUrlText) {\n      console.error(`${CONSOLE_MESSAGE_PREFIX}: fa-icon: 'getUrlText' prop is absent but is necessary for fetching icon`, this);\n      return;\n    }\n    this.getUrlText(iconUrl)\n      .then(svg => {\n      const iconDefinition = {\n        iconName: this.name,\n        prefix: this.stylePrefix,\n        icon: parseSvgText(svg),\n      };\n      library && library.add(iconDefinition);\n      this.iconDefinition = Object.assign({}, iconDefinition);\n    })\n      .catch(e => {\n      console.error(`${CONSOLE_MESSAGE_PREFIX}: fa-icon: failed when using 'getUrlText' to fetch icon`, e, this);\n    })\n      .finally(() => {\n      this.loading = false;\n    });\n  }\n  buildSvg(iconDefinition, extraClasses) {\n    if (!iconDefinition)\n      return;\n    const [width, height, , , svgPathData] = lodash.get(iconDefinition, 'icon', []);\n    const classes = ['svg-inline--fa'];\n    if (this.class) {\n      classes.push(this.class);\n    }\n    if (extraClasses) {\n      classes.push(extraClasses);\n    }\n    if (this.size) {\n      classes.push(`fa-${this.size}`);\n    }\n    const allClasses = classes.join(' ');\n    if (Array.isArray(svgPathData)) {\n      return (h(\"svg\", { class: allClasses, xmlns: \"http://www.w3.org/2000/svg\", viewBox: `0 0 ${width} ${height}` }, h(\"path\", { fill: \"currentColor\", class: \"fa-primary\", d: svgPathData[0] }), h(\"path\", { fill: \"currentColor\", class: \"fa-secondary\", d: svgPathData[1] })));\n    }\n    else {\n      return (h(\"svg\", { class: allClasses, xmlns: \"http://www.w3.org/2000/svg\", viewBox: `0 0 ${width} ${height}` }, h(\"path\", { fill: \"currentColor\", d: svgPathData })));\n    }\n  }\n  render() {\n    return this.iconDefinition ? this.buildSvg(this.iconDefinition) : h(Host, null);\n  }\n};\nFaIcon.style = faIconCss;\n\nexport { FaIcon as fa_icon };\n"],"sourceRoot":""}