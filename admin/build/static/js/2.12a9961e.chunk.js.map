{"version":3,"sources":["../node_modules/@fortawesome/fa-icon-chooser/dist/esm/fa-icon.entry.js"],"names":["FaIcon","hostRef","registerInstance","this","pro","loading","iconUpload","iconDefinition","prefix","iconName","name","icon","parseInt","width","height","unicode","toString","path","svgApi","stylePrefix","findIconDefinition","svgFetchBaseUrl","kitToken","iconUrl","PREFIX_TO_STYLE","library","lodash","get","getUrlText","then","svg","parseSvgText","add","Object","assign","catch","e","console","error","CONSOLE_MESSAGE_PREFIX","finally","extraClasses","svgPathData","classes","class","push","size","allClasses","join","Array","isArray","h","xmlns","viewBox","fill","d","buildSvg","Host","style"],"mappings":"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","file":"static/js/2.12a9961e.chunk.js","sourcesContent":["import { r as registerInstance, h, f as Host } from './index-4ad4b058.js';\nimport { C as CONSOLE_MESSAGE_PREFIX, P as PREFIX_TO_STYLE, l as lodash, p as parseSvgText } from './utils-dd78e4a8.js';\n\nconst faIconCss = \"\";\n\nconst FaIcon = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.pro = false;\n    this.loading = false;\n  }\n  componentWillLoad() {\n    if (this.iconUpload) {\n      this.iconDefinition = {\n        prefix: 'fak',\n        iconName: this.iconUpload.name,\n        icon: [parseInt(`${this.iconUpload.width}`), parseInt(`${this.iconUpload.height}`), [], this.iconUpload.unicode.toString(16), this.iconUpload.path],\n      };\n      return;\n    }\n    if (this.icon) {\n      this.iconDefinition = this.icon;\n      return;\n    }\n    if (!this.svgApi) {\n      console.error(`${CONSOLE_MESSAGE_PREFIX}: fa-icon: svgApi prop is needed but is missing`, this);\n      return;\n    }\n    if (!(this.stylePrefix && this.name)) {\n      console.error(`${CONSOLE_MESSAGE_PREFIX}: fa-icon: the 'stylePrefix' and 'name' props are needed to render this icon but not provided.`, this);\n      return;\n    }\n    const { findIconDefinition } = this.svgApi;\n    const iconDefinition = findIconDefinition &&\n      findIconDefinition({\n        prefix: this.stylePrefix,\n        iconName: this.name,\n      });\n    if (iconDefinition) {\n      this.iconDefinition = iconDefinition;\n      return;\n    }\n    if (!this.pro) {\n      console.error(`${CONSOLE_MESSAGE_PREFIX}: fa-icon: 'pro' prop is false but no free icon is avaialble`, this);\n      return;\n    }\n    if (!this.svgFetchBaseUrl) {\n      console.error(`${CONSOLE_MESSAGE_PREFIX}: fa-icon: 'svgFetchBaseUrl' prop is absent but is necessary for fetching icon`, this);\n      return;\n    }\n    if (!this.kitToken) {\n      console.error(`${CONSOLE_MESSAGE_PREFIX}: fa-icon: 'kitToken' prop is absent but is necessary for accessing icon`, this);\n      return;\n    }\n    this.loading = true;\n    const iconUrl = `${this.svgFetchBaseUrl}/${PREFIX_TO_STYLE[this.stylePrefix]}/${this.name}.svg?token=${this.kitToken}`;\n    const library = lodash.get(this, 'svgApi.library');\n    if ('function' !== typeof this.getUrlText) {\n      console.error(`${CONSOLE_MESSAGE_PREFIX}: fa-icon: 'getUrlText' prop is absent but is necessary for fetching icon`, this);\n      return;\n    }\n    this.getUrlText(iconUrl)\n      .then(svg => {\n      const iconDefinition = {\n        iconName: this.name,\n        prefix: this.stylePrefix,\n        icon: parseSvgText(svg),\n      };\n      library && library.add(iconDefinition);\n      this.iconDefinition = Object.assign({}, iconDefinition);\n    })\n      .catch(e => {\n      console.error(`${CONSOLE_MESSAGE_PREFIX}: fa-icon: failed when using 'getUrlText' to fetch icon`, e, this);\n    })\n      .finally(() => {\n      this.loading = false;\n    });\n  }\n  buildSvg(iconDefinition, extraClasses) {\n    if (!iconDefinition)\n      return;\n    const [width, height, , , svgPathData] = lodash.get(iconDefinition, 'icon', []);\n    const classes = ['svg-inline--fa'];\n    if (this.class) {\n      classes.push(this.class);\n    }\n    if (extraClasses) {\n      classes.push(extraClasses);\n    }\n    if (this.size) {\n      classes.push(`fa-${this.size}`);\n    }\n    const allClasses = classes.join(' ');\n    if (Array.isArray(svgPathData)) {\n      return (h(\"svg\", { class: allClasses, xmlns: \"http://www.w3.org/2000/svg\", viewBox: `0 0 ${width} ${height}` }, h(\"path\", { fill: \"currentColor\", class: \"fa-primary\", d: svgPathData[0] }), h(\"path\", { fill: \"currentColor\", class: \"fa-secondary\", d: svgPathData[1] })));\n    }\n    else {\n      return (h(\"svg\", { class: allClasses, xmlns: \"http://www.w3.org/2000/svg\", viewBox: `0 0 ${width} ${height}` }, h(\"path\", { fill: \"currentColor\", d: svgPathData })));\n    }\n  }\n  render() {\n    return this.iconDefinition ? this.buildSvg(this.iconDefinition) : h(Host, null);\n  }\n};\nFaIcon.style = faIconCss;\n\nexport { FaIcon as fa_icon };\n"],"sourceRoot":""}